{"ast":null,"code":"const PRESSED = 1;\nconst RELEASED = 0;\nexport default class KeyboardState {\n  constructor() {\n    // Holds the current state of a given key\n    this.keyStates = new Map();\n\n    // Holds the callback functions for a key code\n    this.keyMap = new Map();\n  }\n  addMapping(code, callback) {\n    this.keyMap.set(code, callback);\n  }\n  handleEvent(event) {\n    const {\n      code\n    } = event;\n    if (!this.keyMap.has(code)) {\n      // Did not have key mapped.\n      return;\n    }\n    event.preventDefault();\n    const keyState = event.type === 'keydown' ? PRESSED : RELEASED;\n    if (this.keyStates.get(code) === keyState) {\n      return;\n    }\n    this.keyStates.set(code, keyState);\n    //console.log(this.keyStates);\n    this.keyMap.get(code)(keyState);\n  }\n  listenTo(window) {\n    ['keydown', 'keyup'].forEach(eventName => {\n      window.addEventListener(eventName, event => {\n        this.handleEvent(event);\n      });\n    });\n  }\n}","map":{"version":3,"names":["PRESSED","RELEASED","KeyboardState","constructor","keyStates","Map","keyMap","addMapping","code","callback","set","handleEvent","event","has","preventDefault","keyState","type","get","listenTo","window","forEach","eventName","addEventListener"],"sources":["/home/kaiyang7766/Desktop/portfolio/src/js/KeyboardState.js"],"sourcesContent":["const PRESSED =1;\nconst RELEASED =0;\n\nexport default class KeyboardState{\n\tconstructor(){\n\t\t// Holds the current state of a given key\n\t\tthis.keyStates=new Map();\n\n\t\t// Holds the callback functions for a key code\n\t\tthis.keyMap=new Map();\n\t}\n\n\taddMapping(code, callback){\n\t\tthis.keyMap.set(code,callback);\n\t}\n\n\thandleEvent(event){\n\t\tconst {code}=event;\n\n\t\tif (!this.keyMap.has(code)){\n\t\t\t// Did not have key mapped.\n\t\t\treturn;\n\t\t}\n\n\t\tevent.preventDefault();\n\n\t\tconst keyState=event.type ==='keydown' ? PRESSED : RELEASED;\n\n\t\tif (this.keyStates.get(code) === keyState){\n\t\t\treturn;\n\t\t}\n\n\t\tthis.keyStates.set(code, keyState);\n\t\t//console.log(this.keyStates);\n\t\tthis.keyMap.get(code)(keyState);\n\t}\n\n\tlistenTo(window){\n\t\t['keydown','keyup'].forEach(eventName=>{\n\t\t\twindow.addEventListener(eventName,event=>{\n\t\t\t\tthis.handleEvent(event);\n\t\t\t});\n\t\t});\n\t}\n}"],"mappings":"AAAA,MAAMA,OAAO,GAAE,CAAC;AAChB,MAAMC,QAAQ,GAAE,CAAC;AAEjB,eAAe,MAAMC,aAAa;EACjCC,WAAW,GAAE;IACZ;IACA,IAAI,CAACC,SAAS,GAAC,IAAIC,GAAG,EAAE;;IAExB;IACA,IAAI,CAACC,MAAM,GAAC,IAAID,GAAG,EAAE;EACtB;EAEAE,UAAU,CAACC,IAAI,EAAEC,QAAQ,EAAC;IACzB,IAAI,CAACH,MAAM,CAACI,GAAG,CAACF,IAAI,EAACC,QAAQ,CAAC;EAC/B;EAEAE,WAAW,CAACC,KAAK,EAAC;IACjB,MAAM;MAACJ;IAAI,CAAC,GAACI,KAAK;IAElB,IAAI,CAAC,IAAI,CAACN,MAAM,CAACO,GAAG,CAACL,IAAI,CAAC,EAAC;MAC1B;MACA;IACD;IAEAI,KAAK,CAACE,cAAc,EAAE;IAEtB,MAAMC,QAAQ,GAACH,KAAK,CAACI,IAAI,KAAI,SAAS,GAAGhB,OAAO,GAAGC,QAAQ;IAE3D,IAAI,IAAI,CAACG,SAAS,CAACa,GAAG,CAACT,IAAI,CAAC,KAAKO,QAAQ,EAAC;MACzC;IACD;IAEA,IAAI,CAACX,SAAS,CAACM,GAAG,CAACF,IAAI,EAAEO,QAAQ,CAAC;IAClC;IACA,IAAI,CAACT,MAAM,CAACW,GAAG,CAACT,IAAI,CAAC,CAACO,QAAQ,CAAC;EAChC;EAEAG,QAAQ,CAACC,MAAM,EAAC;IACf,CAAC,SAAS,EAAC,OAAO,CAAC,CAACC,OAAO,CAACC,SAAS,IAAE;MACtCF,MAAM,CAACG,gBAAgB,CAACD,SAAS,EAACT,KAAK,IAAE;QACxC,IAAI,CAACD,WAAW,CAACC,KAAK,CAAC;MACxB,CAAC,CAAC;IACH,CAAC,CAAC;EACH;AACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}