{"ast":null,"code":"import TileResolver from './TileResolver.js';\nimport { Sides } from './Entity.js';\nexport default class TileCollider {\n  constructor(tileMatrix) {\n    this.tiles = new TileResolver(tileMatrix);\n  }\n  checkX(entity) {\n    let x;\n    if (entity.vel.x > 0) {\n      x = entity.pos.x + entity.size.x;\n    } else if (entity.vel.x < 0) {\n      x = entity.pos.x;\n    } else {\n      return;\n    }\n    const matches = this.tiles.searchByRange(entity.pos.x, entity.pos.x + entity.size.x, entity.pos.y, entity.pos.y + entity.size.y);\n    matches.forEach(match => {\n      if (match.tile.type !== 'ground') {\n        return;\n      }\n      if (entity.vel.x > 0) {\n        if (entity.pos.x + entity.size.x > match.x1) {\n          entity.pos.x = match.x1 - entity.size.x;\n          entity.vel.x = 0;\n        }\n      } else if (entity.vel.x < 0) {\n        if (entity.pos.x < match.x2) {\n          entity.pos.x = match.x2;\n          entity.vel.x = 0;\n        }\n      }\n    });\n  }\n  checkY(entity) {\n    let y;\n    if (entity.vel.y > 0) {\n      y = entity.pos.y + entity.size.y;\n    } else if (entity.vel.y < 0) {\n      y = entity.pos.y;\n    } else {\n      return;\n    }\n    const matches = this.tiles.searchByRange(entity.pos.x, entity.pos.x + entity.size.x, entity.pos.y, entity.pos.y + entity.size.y);\n    matches.forEach(match => {\n      if (match.tile.type !== 'ground') {\n        return;\n      }\n      if (entity.vel.y > 0) {\n        if (entity.pos.y + entity.size.y > match.y1) {\n          entity.pos.y = match.y1 - entity.size.y;\n          entity.vel.y = 0;\n          entity.obstruct(Sides.BOTTOM);\n        }\n      } else if (entity.vel.y < 0) {\n        if (entity.pos.y < match.y2) {\n          entity.pos.y = match.y2;\n          entity.vel.y = 0;\n          entity.obstruct(Sides.TOP);\n        }\n      }\n    });\n  }\n  test(entity) {\n    this.checkY(entity);\n    //const match=this.tiles.matchByPosition(entity.pos.x,entity.pos.y);\n    //if (match){\n    //console.log('Matched tile',match,match.tile);\n  }\n}","map":{"version":3,"names":["TileResolver","Sides","TileCollider","constructor","tileMatrix","tiles","checkX","entity","x","vel","pos","size","matches","searchByRange","y","forEach","match","tile","type","x1","x2","checkY","y1","obstruct","BOTTOM","y2","TOP","test"],"sources":["/home/kaiyang7766/Desktop/portfolio/src/js/TileCollider.js"],"sourcesContent":["import TileResolver from './TileResolver.js';\nimport {Sides} from './Entity.js'\n\nexport default class TileCollider{\n\tconstructor(tileMatrix){\n\t\tthis.tiles=new TileResolver(tileMatrix);\n\t}\n\n\tcheckX(entity){\n\t\tlet x;\n\t\tif (entity.vel.x>0){\n\t\t\tx=entity.pos.x+entity.size.x;\n\t\t} else if (entity.vel.x<0){\n\t\t\tx=entity.pos.x;\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\n\t\tconst matches=this.tiles.searchByRange(\n\t\t\tentity.pos.x,entity.pos.x+entity.size.x,\n\t\t\tentity.pos.y,entity.pos.y+entity.size.y);\n\n\t\tmatches.forEach(match=>{\n\t\t\tif (match.tile.type!=='ground'){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (entity.vel.x>0){\n\t\t\t\tif (entity.pos.x+entity.size.x>(match.x1)){\n\t\t\t\t\tentity.pos.x=(match.x1-entity.size.x);\n\t\t\t\t\tentity.vel.x=0;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (entity.vel.x<0){\n\t\t\t\tif (entity.pos.x<(match.x2)){\n\t\t\t\t\tentity.pos.x=(match.x2);\n\t\t\t\t\tentity.vel.x=0;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tcheckY(entity){\n\t\tlet y;\n\t\tif (entity.vel.y>0){\n\t\t\ty=entity.pos.y+entity.size.y;\n\t\t} else if (entity.vel.y<0){\n\t\t\ty=entity.pos.y\n\t\t\t;\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\n\t\tconst matches=this.tiles.searchByRange(\n\t\t\tentity.pos.x,entity.pos.x+entity.size.x,\n\t\t\tentity.pos.y,entity.pos.y+entity.size.y);\n\n\t\tmatches.forEach(match=>{\n\t\t\tif (match.tile.type!=='ground'){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (entity.vel.y>0){\n\t\t\t\tif (entity.pos.y+entity.size.y>(match.y1)){\n\t\t\t\t\tentity.pos.y=(match.y1-entity.size.y);\n\t\t\t\t\tentity.vel.y=0;\n\n\t\t\t\t\tentity.obstruct(Sides.BOTTOM);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (entity.vel.y<0){\n\t\t\t\tif (entity.pos.y<(match.y2)){\n\t\t\t\t\tentity.pos.y=(match.y2);\n\t\t\t\t\tentity.vel.y=0;\n\n\t\t\t\t\tentity.obstruct(Sides.TOP);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\ttest(entity){\n\t\tthis.checkY(entity);\n\t\t//const match=this.tiles.matchByPosition(entity.pos.x,entity.pos.y);\n\t\t//if (match){\n\t\t//console.log('Matched tile',match,match.tile);\n\t\t}\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}